# Construct an SVG template with triangle borders formed by repeating text
triangle_text = "ð“‚€ ð“†£ ð“‹¹ ð“‚€ SHARIF AL SHAWISH | ABUELABED | ALARAB777 ð“‹¹ ð“†£ ð“‚€ "
repeat_count = 50  # Repeat enough to cover the triangle sides

# SVG canvas size
canvas_size = 1024

# Coordinates of an equilateral triangle
triangle_points = [
    (canvas_size / 2, 100),  # Top vertex
    (150, canvas_size - 150),  # Bottom left
    (canvas_size - 150, canvas_size - 150),  # Bottom right
]

# Generate SVG path descriptions for triangle sides
def path_d(p1, p2):
    return f"M {p1[0]},{p1[1]} L {p2[0]},{p2[1]}"

# Build full SVG content
svg_content = f'''<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg width="{canvas_size}" height="{canvas_size}" xmlns="http://www.w3.org/2000/svg">
  <style>
    textPath {{
      font-family: 'serif';
      font-size: 10px;
      fill: #3a2e1e;
      letter-spacing: 1px;
    }}
  </style>
  <defs>
    <path id="side1" d="{path_d(triangle_points[0], triangle_points[1])}" />
    <path id="side2" d="{path_d(triangle_points[1], triangle_points[2])}" />
    <path id="side3" d="{path_d(triangle_points[2], triangle_points[0])}" />
  </defs>

  <text><textPath href="#side1" startOffset="0%">{triangle_text * repeat_count}</textPath></text>
  <text><textPath href="#side2" startOffset="0%">{triangle_text * repeat_count}</textPath></text>
  <text><textPath href="#side3" startOffset="0%">{triangle_text * repeat_count}</textPath></text>
</svg>
'''

# Save to file
output_path = "/mnt/data/triangle_text_logo.svg"
with open(output_path, "w", encoding="utf-8") as f:
    f.write(svg_content)

output_path.name  # Just show the filename
